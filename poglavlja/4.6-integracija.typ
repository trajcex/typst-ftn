== Интеграције са спољним системима
=== Генерисање и управљање API кључевима
У циљу обезбеђивања сигурне комуникације између система и спољних сервиса, имплементиран је механизам за управљање API кључевима. Сваки кључ представља јединствени идентификатор који служи за аутентификацију захтева упућених ка систему и заштиту од неовлашћеног приступа.

Сваки корисник може имати више кључева, при чему је сваки од њих повезан са конкретним именом и наменом. Оваква организација омогућава прецизну контролу приступа и раздвајање права употребе по различитим сервисима или пројектима. Систем спречава дуплирање назива кључева за истог корисника, чиме се обезбеђује јасна структура и једнозначна идентификација сваког кључа.

Генерисање кључа се врши аутоматски приликом његовог креирања, уз употребу криптографски сигурне генерације случајних вредности. На тај начин се минимизује ризик од предвиђања или злоупотребе кључева.

Осим креирања, систем подржава и управљање животним циклусом кључева, као што су брисање, ревокација и верификација током сваког захтева. Кључ је могуће копирати само у тренутку његовог генерисања, након чега више није доступан за преглед из безбедносних разлога. Уколико се изгуби, потребно је обрисати постојећи и генерисати нови кључ. Сви кључеви се чувају у бази података повезаној са корисничким налогом, што омогућава контролу приступа и праћење активности.

Овако дизајниран механизам представља основу за сигурну интеграцију са спољним системима, као што су _GitHub_ и _GitLab_, који користе API кључеве за потписивање и верификацију _webhook_ захтева.
=== Подршка за _GitHub_ и _GitLab webhook_-ове
Систем омогућава директну интеграцију са платформама _GitHub_ и _GitLab_ путем _webhook_ механизма, што омогућава аутоматско покретање послова након промена у репозиторијуму.
_Webhook_ представља HTTP захтев који _Git_ сервер аутоматски упућује _Typhoon_ систему сваки пут када се догоди неки унапред дефинисани догађај, као што су нови _commit_, отварање _pull request_-а или спајање гране (_merge_).

У конфигурацији _webhook_-а дефинише се:

- _Payload URL_, који представља адресу _Typhoon API_-ja на коју се шаље догађај и садржи параметре као што су идентификатор посла (_job_id_) и друге вредности потребне за извршавање

- тајни кључ (_secret_), који у оквиру система представља API кључ
- као и тип догађаја који треба да покрећу webhook.

По пријему _webhook_-а, сервер врши проверу потписа или токена у зависности од платформе:

- _GitHub_ користи HMAC-SHA256 потпис који се шаље у заглављу `X-Hub-Signature-256`.

- _GitLab_ користи токен у заглављу `X-Gitlab-Token`.

Потпис или токен се упоређује са листом важећих API кључева у бази. Уколико је провера успешна, систем покреће дефинисани посао који је прослеђен у параметрима захтева.
Поред покретања посла, могуће је проследити и додатне параметре који се аутоматски повезују са подацима из JSON тела догађаја, попут назива гране или репозиторијума.

На овај начин, сваки _commit_ или _merge_ у изворном коду може аутоматски активирати процес изградње, тестирања и доставе, без потребе за ручном интервенцијом.