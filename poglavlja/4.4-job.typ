== Управљање пословима (_Job_-овима)
У овом поглављу описан је механизам управљања пословима у оквиру система. Биће објашњено како се послови креирају, конфигуришу и покрећу, као и начин на који се чува њихова историја извршавања и генерисани артефакти. Поред тога, детаљно је представљен процес извршавања појединачних корака (_Step_-ова) унутар посла.
=== Креирање и конфигурисање послова
Креирање новог посла у систему врши се путем форме која омогућава унос основних информација и дефинисање корака (_steps_) који ће се извршавати.

Сваком послу се додељује јединствени идентификатор, назив и опис, као и агент на ком ће се извршавати. Поред тога, у оквиру исте форме могуће је дефинисати _webhook_ адресе за _Slack_ и _Microsoft Teams_, чиме се омогућава слање нотификација о статусу извршавања директно на изабрану платформу.
На Слици @fig:job-forma-webhook је приказан део форме за креирање посла са уносом основних информација и _webhook_ адреса
#figure(
[
#box(width: auto, image("../slike/job_forma_webhook.png"));
],
caption: [
Део форме за креирање посла са уносом основних информација и _webhook_ адреса.
]
)<fig:job-forma-webhook>

Кораци представљају логичке јединице које дефинишу ток извршавања посла. Сваки корак описује конкретну акцију коју агент треба да спроведе, попут клонирања репозиторијума, покретања скрипте или преноса резултата извршавања.
На Слици @fig:steps је приказан пример конфигурације корака (_steps_) у оквиру једног посла.
#figure(
[
#box(width: auto, image("../slike/steps.png"));
],
caption: [
Пример форме за додавање корака у послу.]
)<fig:steps>
Сваки посао може имати сопствене параметре(_properties_) који дефинишу начин извршавања.
Параметри могу бити различитих типова у зависности од природе вредности:

- _Text_ – унос једноставне текстуалне вредности.
- _Toggle_ (_Boolean_) – омогућава укључивање или искључивање одређене опције.
- _Select_ – избор једне вредности из понуђеног скупа.
- _Multiple Select_ – избор више вредности из понуђеног скупа.

Параметри се могу дефинисати на више начина унутар конфигурације посла, зависно од синтаксе или окружења које се користи.
Најчешћи облици записивања променљивих су:
- `$`_var_, 
- `$`{_var_},
- {{_var_}} и
- %_var_%.
Сваки од ових начина омогућава динамичко убацивање вредности у време извршавања посла.

На Слици @fig:properties је приказан пример форме за дефинисање различитих типова параметара (_properties_) који се могу користити у послу.
#figure(
[
#box(width: auto, image("../slike/properties.png"));
],
caption: [
Пример форме за дефинисање параметара (_properties_) различитих типова у послу.]
)<fig:properties>

=== Типови корака и параметри извршавања
Сваки посао (_Job_) у систему се састоји од једног или више корака (_Step_-ова), при чему сваки корак представља одређену акцију која ће бити извршена на агенту. У зависности од врсте корака, систем примењује различите механизме извршавања и приказа конфигурационих параметара.

Подржани типови корака су:

- _Clone_ – клонирање Git репозиторијума.
- _Script_ – извршавање произвољне скрипте у окружењу агента.
- _Artifacts Upload_ – отпремање изабраних датотека као артефаката извршавања.
- _Artifacts Download_ – преузимање артефаката.
- _Report_ – генерисање извештаја.

==== _Clone_
_Clone_ корак представља једну од фаза извршавања посла и има задатак да обезбеди изворни код потребан за извршавање наредних корака. Приликом конфигурације посла, корисник бира метод којим ће се репозиторијум клонирати. Систем подржава више начина аутентикације (SSH кључеви, _access token_ или _GitHub App_), али како би се очувала безбедност, само мастер има приступ поверљивим подацима корисника.

Мастер врши клонирање из оригиналног Git репозиторијума (нпр. _GitHub_ или _GitLab_), након чега преузети код отпрема (_push_) на _Gitea_-у. _Gitea_ је локални сервер, самостално хостован _Git_ систем. На овај начин се оригинални репозиторијум никада не излаже агентима, а потенцијално осетљиви подаци као што су приступни токени или SSH кључеви остају ограничени искључиво на мастеру.

Приликом иницијалне регистрације или повезивања агента са системом, агент шаље свој јавни SSH кључ мастеру. Мастер затим додаје тај кључ у _Gitea_ систем, чиме агенту омогућава приступ одговарајућим репозиторијумима. На овај начин свака комуникација између агента и _Gitea_-е одвија се путем безбедне SSH конекције, уз јасно дефинисане аутентикационе механизме и без потребе да агент поседује било какве корисничке креденцијале.

Агенти затим клонирају и повлаче (_pull_) код искључиво са _Gitea_ сервера, чиме се обезбеђује додатни ниво сигурности и централизована контрола над кодом који се извршава у систему.

На Слици @fig:clone-step приказан је ток извршавања Clone корака — од иницијалног преузимања кода од стране Master-а до његовог преноса на Gitea и преузимања од стране агената.
#figure(
[
#box(width: auto, image("../slike/clone-step.png"));
],
caption: [
Ток извршавања _Clone_ корака и комуникација између мастера, _Gitea_ сервера и агената.
]
)<fig:clone-step>
==== _Script_
Извршавање корака у оквиру послова реализовано је помоћу посебног механизма агента који омогућава покретање скрипти у контролисаном окружењу. За сваки корак се динамички генерише привремена скрипта која се извршава у засебном процесу, при чему се резултати извршавања прате у реалном времену и прослеђују систему.

Након завршетка извршавања, процес се безбедно прекида, а привремени ресурси се аутоматски уклањају. На овај начин се обезбеђује стабилност агента и поуздано извршавање дефинисаних корака без ризика од нежељених споредних ефеката.
==== _Artifacts Upload/Download_
Једна од кључних фаза односи се на преузимање и отпремање артефаката који настају током извршавања послова. Артефакти представљају резултате извршавања појединачних корака, као што су изграђене бинарне датотеке, извештаји о тестирању или конфигурациони фајлови, који се користе у наредним фазама процеса.

У оквиру фаза _Artifacts Download_ и _Artifacts Upload_, систем обезбеђује сигуран и контролисан пренос артефаката између агената и централног складишта података. На Слици @fig:minio је приказан поступак преузимања и отпремања артефаката у систему.
#figure(
[
#box(width: auto, image("../slike/minio.png"));
],
caption: [
Ток извршавања _Clone_ корака и комуникација између мастера, _Gitea_ сервера и агената.
]
)<fig:minio>

Опис процеса:

+ Генерисање привремене URL адресе:
Мастер сервис иницира процес генерисања _presigned URL_ адресе у складишту података (_MinIO_).
+ Прослеђивање команде агенту:
Након успешног генерисања _presigned URL_ адресе, мастер сервис путем _Nginx_ сервера прослеђује команду агенту, која садржи неопходне параметре за извршење задатка — било да је реч о преузимању или отпремању артефаката.

+ Провера валидности захтева:
Приликом обраде команде, агент остварује комуникацију са _Nginx_ прокси сервером, који врши проверу ваљаности и аутентичности захтева, након чега се комуникација безбедно прослеђује ка складишту података.

+ Извршење операције преузимања или отпремања:
Агенти користе добијену _presigned URL_ адресу за директно преузимање или отпремање артефаката у складиште (_MinIO_). Оваквим приступом елиминише се потреба за директним приступом бази података или серверу апликације, чиме се постиже виши степен безбедности, као и ефикаснији пренос података унутар система.

Оваква архитектура омогућава сигуран и скалабилан пренос података унутар система, уз минималан ризик од неовлашћеног приступа. Употреба _presigned URL_ механизма елиминише потребу да агенти поседују приступне креденцијале за складиште, чиме се повећава ниво безбедности целокупног CI/CD процеса.
==== _Report_

У оквиру процеса тестирања, систем аутоматски генерише извештај о резултатима у облику _Allure report_-a , који садржи податке о извршеним тестовима, њиховом статусу и релевантним метаподацима. Ради лакшег прегледа, анализе и архивирања резултата, реализован је механизам који омогућава аутоматизовано отпремање ових извештаја на сервер.

Процес отпремања извештаја подразумева идентификацију пројекта ком извештај припада, припрему одговарајуће архиве са подацима и њено слање ка централном систему. На тај начин се обезбеђује да резултати сваког извршавања тестова буду доступни унутар јединственог складишта, чиме се омогућава праћење квалитета током развоја и анализа промена кроз време.

Аутоматизацијом овог поступка елиминише се потреба за ручним интервенцијама, што смањује могућност грешке и убрзава процес тестирања. Овакво решење омогућава поуздану и конзистентну евиденцију резултата тестирања, као и интеграцију са осталим компонентама система за континуирану интеграцију и испоруку.
=== Извршавање послова
Процес извршавања послова представља централни механизам система и служи као спона између дефинисаних конфигурација, агената и мастера. Циљ овог процеса јесте да обезбеди сигурно, контролисано и предвидиво извршавање различитих корака који чине један посао, као и да омогући праћење и анализу резултата сваког извршавања.

Када се посао активира, мастер приступа анализи конфигурације и припреми параметара потребних за сваку фазу извршавања. Посао се састоји од више корака (_steps_), при чему је за сваки корак дефинисан скуп параметара који одређују његово понашање. Сви ови подаци се организују у структурираном JSON формату, који се затим шаље агенту задуженом за извршавање.

Агент, након пријема инструкција, интерпретира достављени JSON документ и приступа извршавању дефинисаних корака редом. Тиме се обезбеђује потпуна изолација извршења, јер сваки агент делује у сопственом окружењу и користи само параметре који су му додељени.

Систем омогућава континуирано праћење извршавања путем повратних информација које агент шаље мастеру. Ови подаци садрже детаље о току извршавања, времену трајања и евентуалним грешкама, што омогућава да се напредак посла надгледа у реалном времену. По завршетку извршавања, резултати сваког корака се евидентирају и чувају у бази података, чиме се омогућава накнадна анализа и генерисање извештаја.

Поред појединачних резултата корака, систем чува и све записе (логове) који настају током извршавања послова. Ови логови садрже детаљне информације о току рада агента, времену почетка и завршетка сваког корака, као и о евентуалним грешкама или неуспелим извршењима.
=== Историја извршавања и артефакти
Свако извршавање посла у систему се евидентира и чува у бази података, заједно са свим релевантним параметрима који су коришћени током процеса. Овакав приступ омогућава потпуну реконструкцију поступка у било ком тренутку, што представља основу за анализу, верификацију и унапређење процеса изградње и испоруке.

Поред основних података о покретању и завршетку посла, сваки запис садржи и детаљну листу корака који су извршени у оквиру процеса. За сваки корак бележе се статус, време извршавања и евентуални резултати или грешке. На овај начин систем омогућава прецизно праћење тока извршавања и једноставно откривање потенцијалних неправилности.

Посебан значај имају логови извршавања, који се чувају за сваки појединачни корак. Они омогућавају увид у конкретне активности спроведене током рада система, као и у могуће узроке неуспеха. Поред прегледа логова у оквиру система, кориснику је омогућено и преузимање комплетног лог фајла који садржи детаљан запис читавог извршавања посла.